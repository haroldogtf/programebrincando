/* Generated By:JavaCC: Do not edit this line. ProgrameBrincandoConstants.java */
package plp.programebrincando.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProgrameBrincandoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BLACK = 6;
  /** RegularExpression Id. */
  int RED = 7;
  /** RegularExpression Id. */
  int GREEN = 8;
  /** RegularExpression Id. */
  int BLUE = 9;
  /** RegularExpression Id. */
  int TRUE = 10;
  /** RegularExpression Id. */
  int FALSE = 11;
  /** RegularExpression Id. */
  int CONSTANT = 12;
  /** RegularExpression Id. */
  int DIGIT = 13;
  /** RegularExpression Id. */
  int STRING_LITERAL = 14;
  /** RegularExpression Id. */
  int PLUS = 15;
  /** RegularExpression Id. */
  int EQUAL = 16;
  /** RegularExpression Id. */
  int GT = 17;
  /** RegularExpression Id. */
  int LT = 18;
  /** RegularExpression Id. */
  int GTE = 19;
  /** RegularExpression Id. */
  int LTE = 20;
  /** RegularExpression Id. */
  int UNION = 21;
  /** RegularExpression Id. */
  int LEARN = 22;
  /** RegularExpression Id. */
  int ENDLEARN = 23;
  /** RegularExpression Id. */
  int REPEAT = 24;
  /** RegularExpression Id. */
  int TIMES = 25;
  /** RegularExpression Id. */
  int ENDREPEAT = 26;
  /** RegularExpression Id. */
  int IF = 27;
  /** RegularExpression Id. */
  int THEN = 28;
  /** RegularExpression Id. */
  int ELSE = 29;
  /** RegularExpression Id. */
  int ENDIF = 30;
  /** RegularExpression Id. */
  int FOWARD = 31;
  /** RegularExpression Id. */
  int BACK = 32;
  /** RegularExpression Id. */
  int RIGHT = 33;
  /** RegularExpression Id. */
  int LEFT = 34;
  /** RegularExpression Id. */
  int SETPENCOLOR = 35;
  /** RegularExpression Id. */
  int SETPENUSE = 36;
  /** RegularExpression Id. */
  int LPAREN = 37;
  /** RegularExpression Id. */
  int RPAREN = 38;
  /** RegularExpression Id. */
  int COMMA = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"PRETO\"",
    "\"VERMELHO\"",
    "\"VERDE\"",
    "\"AZUL\"",
    "\"VERDADEIRO\"",
    "\"FALSO\"",
    "<CONSTANT>",
    "<DIGIT>",
    "<STRING_LITERAL>",
    "\"+\"",
    "\"==\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"JUNTA\"",
    "\"APRENDA\"",
    "\"FIMAPRENDA\"",
    "\"REPETIR\"",
    "\"VEZES\"",
    "\"FIMREPETIR\"",
    "\"SE\"",
    "\"FACA\"",
    "\"SENAOFACA\"",
    "\"FIMSE\"",
    "\"PARAFRENTE\"",
    "\"PARATRAS\"",
    "\"GIRARDIREITA\"",
    "\"GIRARESQUERDA\"",
    "\"CORCANETA\"",
    "\"USARCANETA\"",
    "\"(\"",
    "\")\"",
    "\",\"",
  };

}
